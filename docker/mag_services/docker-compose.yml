services:
  # MongoDB service configuration
  mongodb:
    image: mongodb/mongodb-community-server:latest
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    ports:
      - "127.0.0.1:${MONGO_PORT}:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - mag_network
    command: ["--bind_ip_all"]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "50m"     # Maximum size of a single log file, adjust as needed
        max-file: "10"      # Maximum number of log files to retain, adjust as needed
    deploy:
      resources:
        limits:
          cpus: '4'         # 4 CPU cores, adjust as needed
          memory: 4G        # 4GB memory, adjust as needed
        reservations:
          cpus: '2'         # 2 CPU cores, adjust as needed
          memory: 4G        # 4GB memory, adjust as needed

  # MongoDB Express Web interface
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: always
    ports:
      - "127.0.0.1:${MONGO_EXPRESS_PORT}:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_OPTIONS_EDITORTHEME: ambiance
    depends_on:
      - mongodb
    networks:
      - mag_network
    logging:
      driver: "json-file"
      options:
        max-size: "20m"     # Maximum size of a single log file, adjust as needed
        max-file: "5"       # Maximum number of log files to retain, adjust as needed
    deploy:
      resources:
        limits:
          cpus: '1'         # 1 CPU core, adjust as needed
          memory: 512M      # 512MB memory, adjust as needed
        reservations:
          cpus: '0.5'       # 0.5 CPU core, adjust as needed
          memory: 256M      # 256MB memory, adjust as needed

  # MinIO object storage service
  minio:
    image: minio/minio:latest
    container_name: minio
    restart: always
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "127.0.0.1:${MINIO_API_PORT}:9000"     # API port
      - "127.0.0.1:${MINIO_CONSOLE_PORT}:9001" # Console port
    volumes:
      - minio_data:/data
    networks:
      - mag_network
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "10"
    deploy:
      resources:
        limits:
          cpus: '2'         # 2 CPU cores, adjust as needed
          memory: 2G        # 2GB memory, adjust as needed
        reservations:
          cpus: '1'         # 1 CPU core, adjust as needed
          memory: 1G        # 1GB memory, adjust as needed

networks:
  mag_network:
    driver: bridge

volumes:
  mongodb_data:
  mongodb_config:
  minio_data: